import numpy as np
import unittest

from egd.game.moves import possible_next_moves


class MovesTest(unittest.TestCase):

    def test_possible_next_moves(self):
        """ Tests possible next moves. """

        hand, board = possible_next_moves(
            np.array([0, 2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 2]),
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0]))
        self.assertTrue(np.all(hand == np.array([
            [0, 2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 2],
            [0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2],
            [0, 2, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 1],
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 2],
            [0, 1, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 1]
        ])))
        self.assertTrue(np.all(board == np.array([
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
            [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
        ])))

        hand, board = possible_next_moves(
            np.array([1, 2, 3, 1, 0, 0, 0, 3, 0, 4, 0, 0, 2]),
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1]))
        self.assertTrue(np.all(hand == np.array([
            [1, 2, 3, 1, 0, 0, 0, 3, 0, 4, 0, 0, 2],
            [1, 2, 3, 1, 0, 0, 0, 0, 0, 4, 0, 0, 2],
            [1, 2, 3, 1, 0, 0, 0, 1, 0, 4, 0, 0, 1],
            [1, 2, 3, 1, 0, 0, 0, 2, 0, 4, 0, 0, 0],
            [1, 2, 3, 0, 0, 0, 0, 3, 0, 4, 0, 0, 0],
            [1, 2, 0, 1, 0, 0, 0, 3, 0, 4, 0, 0, 2],
            [1, 2, 1, 1, 0, 0, 0, 3, 0, 4, 0, 0, 1],
            [1, 2, 2, 1, 0, 0, 0, 3, 0, 4, 0, 0, 0],
            [1, 0, 3, 1, 0, 0, 0, 3, 0, 4, 0, 0, 1],
            [1, 1, 3, 1, 0, 0, 0, 3, 0, 4, 0, 0, 0],
            [0, 2, 3, 1, 0, 0, 0, 3, 0, 4, 0, 0, 0]
        ])))
        self.assertTrue(np.all(board == np.array([
            [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1],
            [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1],
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2],
            [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2],
            [0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
            [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
            [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
            [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
            [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
        ])))


if __name__ == '__main__':
    unittest.main()
